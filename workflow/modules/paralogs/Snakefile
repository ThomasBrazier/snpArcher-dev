import pandas as pd
import os
include: "common.smk"


samples = pd.read_table(config["samples"], sep=",", dtype=str).replace(' ', '_', regex=True)
REFGENOME = samples['refGenome'].unique().tolist()


wildcard_constraints:
    prefix=config["final_prefix"]

rule all:
    input:
        target = expand("results/{refGenome}/paralogs/rCNV/{prefix}_rCNV.html", refGenome=REFGENOME, prefix=config["final_prefix"])


rule rCNV:
    input:
        vcfFinal = "results/{refGenome}/{prefix}_raw.vcf.gz",
        vcfFinalidx = "results/{refGenome}/{prefix}_raw.vcf.gz.tbi"
    output:
        "results/{refGenome}/paralogs/rCNV/{prefix}_allele_info.tsv",
        "results/{refGenome}/paralogs/rCNV/{prefix}_deviant.tsv",
        "results/{refGenome}/paralogs/rCNV/{prefix}_CNV.tsv",
        "results/{refGenome}/paralogs/rCNV/{prefix}_deviant.BED",
        "results/{refGenome}/paralogs/rCNV/{prefix}_CNV.BED",
        "results/{refGenome}/paralogs/rCNV/{prefix}_duplicates.tsv",
        "results/{refGenome}/paralogs/rCNV/{prefix}_rCNV.html"
    conda:
        "envs/rcnv.yml"
    log:
        "logs/{refGenome}/rCNV/{prefix}.txt"
    benchmark:
        "benchmarks/{refGenome}/rCNV/{prefix}.txt"
    params:
        refGenome = "{refGenome}",
        prefix = "{prefix}",
        maxMissSample = config['maxMissSample'],
        maxMissSNP = config['maxMissSNP'],
        maxRelatedness = config['maxRelatedness']
    script:
        "scripts/rcnv.R"